<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container">
        <!-- <div id="expense-tracker-title">Expense Tracker</div> -->
        <p id="form-status" class="hide"></p>
        <!-- Expense Form -->
        <form action="/expenses" id="add-expense-form" class="" method="POST">
            <div id="fieldsContainer">
                <div class="single-expense-form">
                    <input type="date" id="date" name="date[]" class="date-field" required>
                    <input type="number" id="amount" name="amount[]" class="amount-field" placeholder="Amount" required>
                    <select name="category[]" id="category" class="category-field" required>
                    </select>
                    <input type="text" id="description" name="description[]" class="description-field" placeholder="Description">
                    <button type="button" class="remove-btn">Remove</button>
                </div>
            </div>
            <button type="button" id="addField">Add More</button>
            <button type="submit">Submit</button>
            <button type="button" onclick="onCancelClick(this);">Cancel</button>
        </form>
        <button type="button" id="add-expense" onclick="onAddExpenseClick(this);">Add Expense</button>
        <div class="expense-info">
            <b id="currentYear"></b>
            <select name="month" id="month" onchange="onMonthChange(this)"></select>
            : <b id="sum"></b>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Title</th>
                    <th>Category</th>
                    <th>Amount</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="expenses"></tbody>
        </table>
    </div>
    <script>
        const allExpenses = {};
        let categories = [];
        document.getElementById("currentYear").innerHTML = new Date().getFullYear().toString();

        document.getElementById("addField").addEventListener("click", function() {
            const container = document.getElementById("fieldsContainer");

            const newGroup = document.createElement("div");
            newGroup.classList.add("single-expense-form");
            newGroup.innerHTML = `
                <input type="date" id="date" name="date[]" class="date-field" required>
                <input type="number" id="amount" name="amount[]" class="amount-field" placeholder="Amount" required>
                <select name="category[]" id="category" class="category-field" required>
                    ${categories.map(e => `<option value="${e}" ${e === 'Other' ? 'selected' : ''}>${e}</option>`).join('')}
                </select>
                <input type="text" id="description" name="description[]" class="description-field" placeholder="Description">
                <button type="button" class="remove-btn">Remove</button>
            `;

            container.appendChild(newGroup);
            document.querySelectorAll(".date-field").forEach(input => {
                input.value = new Date().toISOString().split('T')[0];
            });
        });


        document.getElementById("add-expense-form").addEventListener("submit", async function(event) {
            event.preventDefault(); // Prevent default form submission
            
            const formDataArray = [];
            const dateFields = document.querySelectorAll(".date-field");
            const amountFields = document.querySelectorAll(".amount-field");
            const categoryFields = document.querySelectorAll(".category-field");
            const descriptionFields = document.querySelectorAll(".description-field");
            console.log("dateFields: ",dateFields)

            // Collect data from each form field group
            dateFields.forEach((dateField, index) => {
                formDataArray.push({
                    date: dateFields[index].value,
                    amount: amountFields[index].value,
                    category: categoryFields[index].value,
                    description: descriptionFields[index].value
                });
            });
            console.log("formDataArray: ",formDataArray)
            // const formData = {
            //     date: this.date.value,
            //     amount: this.amount.value,
            //     category: this.category.value,
            //     description: this.description.value,
            // };
            
            let formSubmitData = await fetch("/expenses", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(formDataArray),
            });
            console.log("formSubmitData: ",formSubmitData)
            showStatusMessage("Added Successfully!", 'true');
        });
        function onCancelClick(event){
            // document.getElementById('add-expense-form').classList.add('hide');
            document.getElementById('add-expense').classList.remove('hide');
            document.getElementById('add-expense-form').style.display = 'none';
            // document.getElementById('add-expense').style.display = 'block';
        }
        function onAddExpenseClick(event){
            // document.getElementById('add-expense-form').classList.remove('hide');
            event.classList.add('hide');
            document.getElementById('add-expense-form').style.display = 'block';
            // event.style.display = 'none';
        }
        document.getElementById("date").value = new Date().toISOString().split('T')[0];
        const formStatusMessage = "<%= formData?.message ?? '' %>";
        showStatusMessage(formStatusMessage, "<%= formData?.success ?? '' %>");
        // if(formStatusMessage){
        //     const formStatus = "<%= formData?.success ?? '' %>";
        //     const formStatusElement = document.getElementById('form-status');
        //     formStatusElement.innerHTML = formStatusMessage;
        //     formStatusElement.classList.remove('hide');
        //     formStatusElement.classList.add(formStatus);
        //     setTimeout(() => {
        //         formStatusElement.style.display = "none";
        //         formStatusElement.classList.add('hide');
        //     }, formStatus === "true" ? 2000 : 10000);
        // }
        function showStatusMessage(formStatusMessage, formStatus){
            const formStatusElement = document.getElementById('form-status');
            formStatusElement.classList.remove('hide');
            if(formStatusMessage){
                // const formStatus = "<%= formData?.success ?? '' %>";
                
                formStatusElement.innerHTML = formStatusMessage;
                formStatusElement.classList.remove('hide');
                formStatusElement.classList.add(formStatus);
                setTimeout(() => {
                    // formStatusElement.style.display = "none";
                    formStatusElement.classList.add('hide');
                }, formStatus === "true" ? 2000 : 10000);
            }
        }

        async function loadExpenses(month){
            const expensesTbody = document.getElementById("expenses");
            expensesTbody.innerHTML = '';
            let row = expensesTbody.insertRow();
            let cell1 = row.insertCell(0);
            cell1.colSpan = 5;
            cell1.style.textAlign  = "center";
            cell1.textContent = "Loadding...";
            // expensesTbody.innerHTML = 'Loadding...';
            let data = await fetch('/expenses?month='+month);
            data = await data.json();
            if(data.status){
                expensesTbody.innerHTML = '';
                let sum = 0;
                allExpenses[month] = data.data.expenses;
                if(data.data.expenses.length > 0){
                    data.data.expenses.forEach(item => {
                        let row = expensesTbody.insertRow();
                        let cell0 = row.insertCell(0);
                        let cell1 = row.insertCell(1);
                        let cell2 = row.insertCell(2);
                        let cell3 = row.insertCell(3);
                        let cell4 = row.insertCell(4);
                        cell0.textContent = item.date;
                        cell1.textContent = item.title;
                        cell2.textContent = item.category;
                        cell3.textContent = (parseFloat(item.amount)).toLocaleString();
                        cell4.textContent = '';
                        sum += parseFloat(item.amount);
                    });
                }else{
                    let row = expensesTbody.insertRow();
                    let cell1 = row.insertCell(0);
                    cell1.colSpan = 5;
                    cell1.style.textAlign  = "center";
                    cell1.textContent = "No expenses";
                }
                document.getElementById("sum").innerHTML = sum.toLocaleString();
            }else{
                showStatusMessage(data.error, 'false');
            }
        }

        // Month
        const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        const select = document.getElementById("month");
        months.forEach((month, index) => {
            let option = document.createElement("option");
            option.value = month;
            option.text = month;
            select.appendChild(option);
        });
        const currentMonth = new Date().toLocaleString('en-US', { month: 'short' });
        select.value = currentMonth;
        async function onMonthChange(event){
            await loadExpenses(event.value);
        }
        async function loadCategories(){
            let data = await fetch('/categories');
            data = await data.json();
            categories = data.data.categories;
            const select = document.getElementsByClassName("category-field")[0];
            data.data.categories.forEach(category => {
                let option = document.createElement("option");
                option.value = category;
                option.text = category;
                if(category === 'Other')    option.selected = true;
                select.appendChild(option);
            });
        }
        // window.onload = loadExpenses(currentMonth);
        window.onload = function(){
            loadCategories();
            loadExpenses(currentMonth);
        };
    </script>
</body>
</html>
